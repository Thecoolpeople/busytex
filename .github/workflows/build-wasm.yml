name: build-wasm

on: 
  workflow_dispatch:
    inputs:
      busytexurlrelease:
        description: 'busytex release url '
        required: false
        default: 'https://github.com/busytex/busytex/releases/download/build_9e27c92469c90d55520cbc9b2f42b05e039c8e78'

env:
  UBUNTUPACKAGES: texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-science
  EMSCRIPTEN_VERSION: 2.0.30
  MAKE_PARALLELISM: -j2

jobs:

  build-wasm:
    runs-on: ubuntu-20.04
    steps:
      - name: Install Prerequisites
        run:  sudo apt-get install -y gperf p7zip-full strace

      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v10
        with:
          version: ${{env.EMSCRIPTEN_VERSION}}

      - uses: actions/checkout@v2

#      - name: Download native binaries
#        run:  make URLRELEASE=${{ github.event.inputs.busytexurlrelease }} download-native
      
      - name: Clone/patch TexLive and dependencies
        run:  make texlive build/versions.txt

      - name: Build native busytex
        env:
            MAKEFLAGS: ${{env.MAKE_PARALLELISM}}
        run: |
            make native
            make test

# cache ISO https://github.com/actions/cache
#      - name: Cache ISO
#        id: cache-texlive-iso
#        uses: actions/cache@v2
#        with:
#          path: source/texlive2021-20210325.iso
#        key: texlive-iso

      - name: Download TexLive Full
        run:  make source/texmfrepo.txt
#       if: steps.cache-texlive-iso.outputs.cache-hit != 'true'
#
      - name: Install TexLive
        run: |
            make tds-basic
#            make tds-full

#      - name: Archive native artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: native_build
#          path: |
#            build/texlive-basic/
#            build/native/busytex
#            build/native/fonts.conf
#            source/texmfrepo.txt
#            build/texlive-basic.txt
#            build/texlive-full.txt
#            build/native/texlive/
      
      - name: Test native busytex pipeline
        run: |
            make dist-native
            sh example/example.sh

      - name: Build wasm busytex
        run: |
            make wasm 
            make build/wasm/texlive-basic.js
            make dist-wasm
        env:
            MAKEFLAGS: ${{env.MAKE_PARALLELISM}}
      
#      - name: Archive TexLive wasm build
#        uses: actions/upload-artifact@v2
#        with:
#          name: wasm_build_texlive
#          path: |
#            build/wasm/texlive/
#            example/example_*.pdf
      
#      - name: Recreate Ubuntu packages
#        run:  make $(printf "build/wasm/ubuntu-%s.js " $UBUNTUPACKAGES) -e TEXMF_FULL=build/texlive-full 
#
#      - name: Create Release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: hub release create -m "Wasm assets" -a busytex_pipeline.js -a busytex_worker.js -a build/versions.txt  -a build/wasm/busytex.js -a build/wasm/busytex.wasm   -a source/texmfrepo.txt -a build/texlive-basic.txt -a build/texlive-full.txt -a build/wasm/texlive-basic.js -a build/wasm/texlive-basic.data $(printf -- "-a build/wasm/ubuntu-%s.js " $UBUNTUPACKAGES) $(printf -- "-a build/wasm/ubuntu-%s.data " $UBUNTUPACKAGES) $(printf -- "-a build/wasm/ubuntu-%s.skip.txt " $UBUNTUPACKAGES) $(printf -- "-a build/wasm/ubuntu-%s.good.txt " $UBUNTUPACKAGES) build_${{github.sha}}
