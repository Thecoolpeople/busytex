name: build

on: workflow_dispatch

env:
  UBUNTUPACKAGES: texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-science
  EMSCRIPTEN_VERSION: 2.0.30
  MAKEFLAGS_PARALLELISM: -j2

jobs:

  build-gcc:
    runs-on: ubuntu-20.04
    container:
      image: alpine
    steps:
      - name: Install Prerequisites
        run: apk add --update --no-cache build-base cmake git wget gperf p7zip python3 && ln -sf python3 /usr/bin/python
#        run: sudo apt-get install -y gperf p7zip-full strace
        
      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v10
        with:
          version: ${{env.EMSCRIPTEN_VERSION}}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      
      - name: Clone/patch TexLive and dependencies
        run: make texlive build/versions.txt

      - name: Build native busytex
        run: make native
        env:
            MAKEFLAGS: ${{env.MAKEFLAGS_PARALLELISM}}
      
      - name: Smoke native
        run: make test

      - name: Download TexLive Full
        run:  make source/texmfrepo.txt
      
      - name: Install TexLive
        run: |
            make tds-basic
            make tds-full

#      - name: Archive native artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: native_build
#          path: |
#            build/native/texlive/
#            build/native/busytex
#            build/native/fonts.conf
#            source/texmfrepo.txt
#            build/texlive-basic.txt
#            build/texlive-full.txt
      
      - name: Test native busytex pipeline
        run: |
            make dist-native
            bash example/example.sh

#      - name: Archive native test artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: native_test_example
#          path: |
#            example/example_*.pdf

#      - name: Build wasm busytex
#        run: |
#            make wasm 
#            make build/wasm/texlive-basic.js
#            make dist-wasm
#        env:
#            MAKEFLAGS: ${{env.MAKEFLAGS_PARALLELISM}}
      
#      - name: Archive TexLive wasm build
#        uses: actions/upload-artifact@v2
#        with:
#          name: wasm_build_texlive
#          path: |
#            build/wasm/texlive/
      
#      - name: Recreate Ubuntu packages
#        run: make $(printf "build/wasm/ubuntu-%s.js " $UBUNTUPACKAGES) -e TEXMF_FULL=build/texlive-full 
#
#      - name: Create Release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: hub release create -m "Build assets" -a busytex_pipeline.js -a busytex_worker.js -a build/versions.txt  -a build/wasm/busytex.js -a build/wasm/busytex.wasm   -a build/native/busytex -a build/native/fonts.conf -a source/texmfrepo.txt -a build/texlive-basic.txt -a build/texlive-full.txt -a build/wasm/texlive-basic.js -a build/wasm/texlive-basic.data $(printf -- "-a build/wasm/ubuntu-%s.js " $UBUNTUPACKAGES) $(printf -- "-a build/wasm/ubuntu-%s.data " $UBUNTUPACKAGES) $(printf -- "-a build/wasm/ubuntu-%s.skip.txt " $UBUNTUPACKAGES) $(printf -- "-a build/wasm/ubuntu-%s.good.txt " $UBUNTUPACKAGES) build_${{github.sha}}
